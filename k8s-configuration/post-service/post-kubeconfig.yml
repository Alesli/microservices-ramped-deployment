apiVersion: v1
kind: Namespace
metadata:
  name: k8s-program

---

apiVersion: v1
kind: Service
metadata:
  name: post-app
  namespace: k8s-program
spec:
  selector:
    app: post-app
  ports:
    - protocol: 'TCP'
      port: 8089
      targetPort: 8080
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: post-service
  namespace: k8s-program
spec:
  replicas: 2
  selector:
    matchLabels:
      app: post-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: post-app
    spec:
      containers:
        - name: postapp-container
          image: epamalesiaskarakhod/postapp-image:2.0.0
          imagePullPolicy: Always
          env:
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: posts-db-secret
                  key: userName
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: posts-db-secret
                  key: password
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: post-env-config
                  key: host
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: post-env-config
                  key: port
            - name: USER_HOST
              value: 'user-app.k8s-program'
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 4
            periodSeconds: 3
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 4
            periodSeconds: 3
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3