apiVersion: v1
kind: Service
metadata:
  name: posts-db
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: posts-db
  ports:
    - protocol: TCP
      port: {{ .Values.postDB.service.port }}
  clusterIP: None
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: posts-db
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: posts-db
  replicas: {{ .Values.postDB.replicaCount }}
  selector:
    matchLabels:
      app: posts-db
  template:
    metadata:
      labels:
        app: posts-db
    spec:
      containers:
        - name: posts-db
          image: postgres:latest
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: posts-db-secret
                  key: userName
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: posts-db-secret
                  key: password
            - name: POSTGRES_DB
              value: postsdb
          envFrom:
            - configMapRef:
                name: post-initdb
          volumeMounts:
            - name: posts-db-data
              mountPath: /var/lib/postgresql/data
            - name: post-initdb
              mountPath: /docker-entrypoint-initdb.d/initPostDB.sql
              subPath: initPostDB.sql
          livenessProbe:
            tcpSocket:
              port: {{ .Values.postDB.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 3
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: {{ .Values.postDB.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 3
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            tcpSocket:
              port: {{ .Values.postDB.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 3
      volumes:
        - name: posts-db-data
          persistentVolumeClaim:
            claimName: posts-db-pvc
        - name: post-initdb
          configMap:
            name: post-initdb
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: posts-db-pvc
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: "hostpath"
